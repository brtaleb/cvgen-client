{"version":3,"sources":["components/tools/DownloadButton.js","components/tools/OptionSelector.js","components/Divider.js","config/fonts.js","config/themes.js","config/fieldTypes.js","components/tools/FieldToggle.js","components/tools/PersonalInfoToggle.js","common/common.js","components/SideBar.js","components/fields/ImageField.js","components/fields/HeaderField.js","components/fields/PersonalInfoField.js","components/fields/DefaultField.js","components/fields/DetailedListElement.js","components/fields/BasicListElement.js","components/fields/FieldsMaker.js","components/BuilderBody.js","context/reducers.js","context/actionTypes.js","context/StoreContext.js","containers/CvBuilder.js","App.js","serviceWorker.js","index.js","context/actions.js"],"names":["DownloadButton","_ref","downloadPdf","downloadDocx","react_default","a","createElement","className","index_es","onClick","variant","OptionSelector","type","data","selectItem","_useState","useState","value","_useState2","Object","slicedToArray","state","setState","useEffect","selectorOptions","map","option","key","style","fontFamily","htmlFor","onChange","event","objectSpread","defineProperty","target","name","inputProps","id","Divider","fonts","themes","fieldTypes","detailedFields","FieldToggle","checked","toggleField","field","changed","control","disabled","_objectSpread2","color","label","labelPlacement","PersonalInfoToggle","togglePersonalField","personalInfo","arr","callback","i","res","el","push","objectMap","personalInfoFields","index","prop","tools_FieldToggle","expandIcon","ExpandMore_default","SideBar","profilData","changeFont","layout","activeFields","personalFields","tools_DownloadButton","console","log","components_Divider","tools_PersonalInfoToggle","fieldSwitch","tools_OptionSelector","selectedFont","selectedTheme","selectTheme","ImageField","imgSrc","src","window","location","origin","alt","HeaderField","title","summary","headerInputChange","fieldsToggle","_useState3","_useState4","stateChange","setStateChange","handleChange","lib_default","PersonalInfoField","address","phone","email","birthDate","linkedIn","github","website","personalInputChange","addressField","Fragment","phoneField","emailField","birthDateField","linkedInField","githubField","websiteField","DefaultField","fieldType","children","DetailedListElement","formatedDate","subtitle","inputChange","BasicListElement","element","details","isDetailedField","includes","toUpperCase","FieldsMaker","fields","handleOrderChange","rightField","rightContentRef","React","createRef","leftContentRef","Sortable","current","group","handle","animation","ghostClass","draggable","onSort","defaultFields","detailedList","fields_DetailedListElement","fields_BasicListElement","fields_DefaultField","ref","BuilderBody","font","e","fields_ImageField","fields_PersonalInfoField","newInfoInput","fields_FieldsMaker","fields_HeaderField","newHeaderInput","initialState","reducer","arguments","length","undefined","action","oldState","payload","assign","StoreContext","createContext","CvBuilder","_useContext","useContext","actions","getProfilData","components_SideBar","components_BuilderBody","App","containers_CvBuilder","Boolean","hostname","match","ReactDOM","render","_useReducer","useReducer","_useReducer2","dispatch","axios","get","then","resp","useActions","Provider","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f826a011.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Button, Icon} from \"@material-ui/core\";\r\n\r\nconst DownloadButton = ({downloadPdf, downloadDocx}) => {\r\n  return (\r\n    <div className=\"DownloadButtons\">\r\n      <Button\r\n        onClick={downloadPdf}\r\n        variant=\"contained\"\r\n        className=\"buttonRed\">\r\n        <Icon>picture_as_pdf</Icon>\r\n      </Button>\r\n\r\n      <Button\r\n        onClick={downloadDocx}\r\n        variant=\"contained\"\r\n        className=\"buttonBlue\">\r\n        <Icon>folder_open</Icon>\r\n      </Button>\r\n    </div>\r\n  )\r\n};\r\nexport default DownloadButton;","import React, {useState, useEffect} from 'react'\r\nimport {FormControl, InputLabel, MenuItem, Select} from \"@material-ui/core\";\r\n\r\nconst OptionSelector = ({type, data, selectItem}) => {\r\n  const [state, setState] = useState({\r\n    value: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (state.value) selectItem(state.value);\r\n  }, [state.value]);\r\n\r\n  const selectorOptions = data.map(option => {\r\n    return <MenuItem key={option} style={{fontFamily: option}} value={option}>{option}</MenuItem>\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"OptionSelector\">\r\n      <FormControl className='formControl'>\r\n        <InputLabel htmlFor='select'>{type}</InputLabel>\r\n        <Select\r\n          className=\"selectInput\"\r\n          value={state.value}\r\n          onChange={handleChange}\r\n          inputProps={{\r\n            name: 'value',\r\n            id: 'select'\r\n          }}\r\n        >\r\n          <MenuItem value=\"Roboto\"><em>Default</em></MenuItem>\r\n          {selectorOptions}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  )\r\n};\r\nexport default OptionSelector;","import React from 'react'\r\n\r\nconst Divider = () => {\r\n  return (\r\n    <hr className=\"Divider\"/>\r\n  )\r\n};\r\nexport default Divider;","export const fonts = [\r\n  \"Arial\",\r\n  \"Bookman\",\r\n  \"Calibri\",\r\n  \"Comic Sans MS\",\r\n  \"Courrier\",\r\n  \"Garamond\",\r\n  \"Georgia\",\r\n  \"Helvetica\",\r\n  \"Impact\",\r\n  \"Palatino\",\r\n  \"Roboto\",\r\n  \"Times\",\r\n  \"Times New Roman\",\r\n  \"Trebuchet MS\",\r\n  \"Verdana\"\r\n];","export const themes = [\r\n  \"theme 1\",\r\n  \"theme 2\",\r\n  \"theme 3\"\r\n]","export const fieldTypes = {\r\n  CERTIFICATIONS: 'Certifications',\r\n  EDUCATION: 'Education',\r\n  HOBBIES: 'Hobbies',\r\n  PROJECTS: 'Projects',\r\n  TECHNICALSKILLS: 'Technical Skills',\r\n  EXPERIENCE: 'Experience',\r\n  LANGUAGES: 'Languages'\r\n};\r\n\r\nexport const detailedFields = [\r\n  'CERTIFICATIONS',\r\n  'EDUCATION',\r\n  'PROJECTS',\r\n  'EXPERIENCE'\r\n];","import React, {useState, useEffect} from 'react'\r\nimport {Card, FormControlLabel, Switch} from \"@material-ui/core\";\r\n\r\nconst FieldToggle = ({type, checked, toggleField, field}) => {\r\n  const [state, setState] = useState({\r\n    checked: checked,\r\n    changed: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (state.changed) toggleField(field, state.checked);\r\n    setState({\r\n      ...state,\r\n      changed: false\r\n    });\r\n  }, [state.checked]);\r\n\r\n  const handleChange = name => event => {\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.checked,\r\n      changed: true\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className=\"FieldToggle\">\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            disabled={type === 'Name' || type === 'Phone' || type === 'Email'}\r\n            checked={state.checked}\r\n            onChange={handleChange('checked')}\r\n            value=\"fieldToggled\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label={type}\r\n        labelPlacement=\"start\"\r\n      />\r\n    </Card>\r\n  )\r\n};\r\nexport default FieldToggle;","import React from 'react'\r\nimport {ExpansionPanel, ExpansionPanelDetails, ExpansionPanelSummary} from \"@material-ui/core\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport FieldToggle from \"./FieldToggle\";\r\nimport {objectMap} from \"../../common/common\";\r\n\r\nconst PersonalInfoToggle = ({togglePersonalField, personalInfoFields}) => {\r\n\r\n  let personalInfo = objectMap(personalInfoFields, (el, index, prop) => {\r\n    return (\r\n      <FieldToggle\r\n        key={el.type}\r\n        type={el.type}\r\n        field={prop}\r\n        checked={el.checked}\r\n        toggleField={(type, checked) => togglePersonalField(type, checked)}\r\n      />\r\n    )\r\n  });\r\n\r\n  return (\r\n    <ExpansionPanel className=\"PersonalInfoToggle\">\r\n      <ExpansionPanelSummary className=\"header\" expandIcon={<ExpandMoreIcon/>}>\r\n        <p>Personal Information</p>\r\n      </ExpansionPanelSummary>\r\n      <ExpansionPanelDetails className=\"container\">\r\n        {personalInfo}l\r\n      </ExpansionPanelDetails>\r\n    </ExpansionPanel>\r\n  )\r\n};\r\nexport default PersonalInfoToggle;","export const objectMap = (arr, callback) => {\r\n  let i = 0;\r\n  let res = [];\r\n  for (let el in arr) {\r\n    res.push(callback(arr[el], i++, el));\r\n  }\r\n  return res;\r\n};","import React from 'react'\r\nimport DownloadButton from \"./tools/DownloadButton\";\r\nimport OptionSelector from \"./tools/OptionSelector\";\r\nimport Divider from \"./Divider\";\r\n\r\nimport {fonts} from \"../config/fonts\"\r\nimport {themes} from \"../config/themes\";\r\nimport {fieldTypes} from \"../config/fieldTypes\";\r\nimport FieldToggle from \"./tools/FieldToggle\";\r\nimport PersonalInfoToggle from \"./tools/PersonalInfoToggle\";\r\n\r\nconst SideBar = ({profilData, togglePersonalField, changeFont}) => {\r\n\r\n  const personalInfoFields = profilData ? profilData.layout.activeFields.personalFields : null;\r\n\r\n  const downloadPdf = () => {\r\n    console.log(\"downloadPdf\");\r\n  };\r\n\r\n  const downloadDocx = () => {\r\n    console.log(\"downloadDocx\");\r\n  };\r\n\r\n  const selectTheme = (selectedTheme) => {\r\n    console.log(selectedTheme);\r\n  }\r\n\r\n  const toggleField = (type, fieldSwitch) => {\r\n    // console.log(type, checked);\r\n  }\r\n\r\n  return (\r\n    <div className=\"SideBar\">\r\n      <h1>Curriculum Vitae</h1>\r\n\r\n      <DownloadButton\r\n        downloadPdf={() => downloadPdf()}\r\n        downloadDocx={() => downloadDocx()}\r\n      />\r\n\r\n      <Divider/>\r\n      <PersonalInfoToggle\r\n        personalInfoFields={personalInfoFields}\r\n        togglePersonalField={(type, checked) => togglePersonalField(type, checked)}\r\n      />\r\n\r\n      <FieldToggle\r\n        type={fieldTypes.EDUCATION}\r\n        toggleField={(type, fieldSwitch) => toggleField(type, fieldSwitch)}\r\n      /><br/>\r\n\r\n      <FieldToggle\r\n        type={fieldTypes.EXPERIENCE}\r\n        toggleField={(type, fieldSwitch) => toggleField(type, fieldSwitch)}\r\n      /><br/>\r\n\r\n      <FieldToggle\r\n        type={fieldTypes.CERTIFICATIONS}\r\n        toggleField={(type, fieldSwitch) => toggleField(type, fieldSwitch)}\r\n      />\r\n\r\n      <Divider/>\r\n      <OptionSelector\r\n        type=\"Font\"\r\n        data={fonts}\r\n        selectItem={(selectedFont) => changeFont(selectedFont)}\r\n      /><br/>\r\n\r\n      <OptionSelector\r\n        type=\"Theme\"\r\n        data={themes}\r\n        selectItem={(selectedTheme) => selectTheme(selectedTheme)}\r\n      />\r\n\r\n\r\n    </div>\r\n  )\r\n};\r\nexport default SideBar;","import React from 'react'\r\n\r\nconst ImageField = ({imgSrc}) => {\r\n  return (\r\n    <div className=\"ImageField\">\r\n      <img src={window.location.origin + imgSrc} alt=\"profil_image\"/>\r\n    </div>\r\n  )\r\n};\r\nexport default ImageField;","import React, {useEffect, useState} from 'react'\r\nimport TextareaAutosize from \"react-autosize-textarea\";\r\n\r\nconst HeaderField = ({name, title, summary, headerInputChange, fieldsToggle}) => {\r\n\r\n  const [state, setState] = useState({\r\n    title: title,\r\n    summary: summary\r\n  });\r\n\r\n  const [stateChange, setStateChange] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (stateChange) headerInputChange(state);\r\n    setStateChange(false)\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    setStateChange(true);\r\n  }\r\n\r\n  return (\r\n    <div className=\"HeaderField\">\r\n      <h1>{name}</h1>\r\n\r\n      {\r\n        fieldsToggle.title.checked ?\r\n          <TextareaAutosize\r\n            value={state.title}\r\n            name=\"title\"\r\n            onChange={handleChange}\r\n          >\r\n            {state.title}\r\n          </TextareaAutosize> : null\r\n      }\r\n\r\n      {\r\n        fieldsToggle.summary.checked ?\r\n          <TextareaAutosize\r\n            value={state.summary}\r\n            name=\"summary\"\r\n            onChange={handleChange}\r\n          >\r\n            {state.summary}\r\n          </TextareaAutosize> : null\r\n      }\r\n    </div>\r\n  )\r\n};\r\nexport default HeaderField;","import React, {useState, useEffect} from 'react'\r\nimport TextareaAutosize from \"react-autosize-textarea\";\r\n\r\nconst PersonalInfoField = ({\r\n                             address,\r\n                             phone,\r\n                             email,\r\n                             birthDate,\r\n                             linkedIn,\r\n                             github,\r\n                             website,\r\n                             personalInputChange,\r\n                             fieldsToggle\r\n                           }) => {\r\n\r\n  const [state, setState] = useState({\r\n    address: address,\r\n    phone: phone,\r\n    email: email,\r\n    birthDate: birthDate,\r\n    linkedIn: linkedIn,\r\n    github: github,\r\n    website: website\r\n  });\r\n\r\n  const [stateChange, setStateChange] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (stateChange) personalInputChange(state);\r\n    setStateChange(false);\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value\r\n    })\r\n    setStateChange(true);\r\n  }\r\n\r\n  let addressField = <>\r\n    <label>address</label>\r\n    <TextareaAutosize\r\n      value={state.address}\r\n      name=\"address\"\r\n      onChange={handleChange}\r\n    >\r\n      {state.address}\r\n    </TextareaAutosize>\r\n  </>;\r\n\r\n  let phoneField = <>\r\n    <TextareaAutosize\r\n      className=\"noMargin\"\r\n      value={state.phone}\r\n      name=\"phone\"\r\n      onChange={handleChange}\r\n    >\r\n      {state.phone}\r\n    </TextareaAutosize>\r\n  </>;\r\n\r\n  let emailField = <>\r\n    <TextareaAutosize\r\n      value={state.email}\r\n      name=\"email\"\r\n      onChange={handleChange}\r\n    >\r\n      {state.email}\r\n    </TextareaAutosize>\r\n  </>\r\n\r\n  let birthDateField = <>\r\n    <label>date of birth</label>\r\n    <TextareaAutosize\r\n      value={state.birthDate}\r\n      name=\"birthDate\"\r\n      onChange={handleChange}\r\n    >\r\n      {state.birthDate}\r\n    </TextareaAutosize>\r\n  </>;\r\n\r\n  let linkedInField = <>\r\n    <label>linkedin</label>\r\n    <TextareaAutosize\r\n      value={state.linkedIn}\r\n      name=\"linkedIn\"\r\n      onChange={handleChange}\r\n    >\r\n      {state.linkedIn}\r\n    </TextareaAutosize>\r\n  </>;\r\n\r\n  let githubField = <>\r\n    <label>github</label>\r\n    <TextareaAutosize\r\n      value={state.github}\r\n      name=\"github\"\r\n      onChange={handleChange}\r\n    >\r\n      {state.github}\r\n    </TextareaAutosize>\r\n  </>;\r\n\r\n  let websiteField = <>\r\n    <label>website</label>\r\n    <TextareaAutosize\r\n      value={state.website}\r\n      name=\"website\"\r\n      onChange={handleChange}\r\n    >\r\n      {state.website}\r\n    </TextareaAutosize>\r\n  </>;\r\n\r\n  return (\r\n    <div className=\"PersonalInfoField\">\r\n\r\n      {fieldsToggle.birthDate.checked ? birthDateField : null}\r\n      {fieldsToggle.address.checked ? addressField : null}\r\n      <label>contact</label>\r\n      {fieldsToggle.phone.checked ? phoneField : null}\r\n      {fieldsToggle.email.checked ? emailField : null}\r\n      {fieldsToggle.github.checked ? githubField : null}\r\n      {fieldsToggle.linkedIn.checked ? linkedInField : null}\r\n      {fieldsToggle.website.checked ? websiteField : null}\r\n\r\n    </div>\r\n  )\r\n};\r\nexport default PersonalInfoField;","import React from 'react'\r\n\r\nconst DefaultField = ({fieldType, children}) => {\r\n  return (\r\n    <div className=\"DefaultField draggable\">\r\n      <div className=\"fieldHeader handle\">\r\n        {fieldType}\r\n      </div>\r\n      <div className=\"fieldContent\">\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\nexport default DefaultField;","import React, {useState} from 'react'\r\nimport TextareaAutosize from 'react-autosize-textarea'\r\n\r\nconst DetailedListElement = ({formatedDate, title, subtitle, summary, inputChange}) => {\r\n  const [state, setState] = useState({\r\n    formatedDate: formatedDate,\r\n    title: title,\r\n    subtitle: subtitle,\r\n    summary: summary\r\n  })\r\n\r\n  // const firstUpdate = useRef(true);\r\n  // useLayoutEffect(() => {\r\n  //    if (firstUpdate.current) {\r\n  //       firstUpdate.current = false;\r\n  //       return;\r\n  //    }\r\n  //    inputChange(state);\r\n  // });\r\n\r\n  const handleChange = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"DetailedListElement\">\r\n      {state.formatedDate ?\r\n        <TextareaAutosize\r\n          value={state.formatedDate}\r\n          name=\"formatedDate\"\r\n          onChange={handleChange}\r\n        >\r\n          {state.formatedDate}\r\n        </TextareaAutosize> : null\r\n      }\r\n\r\n\r\n      {state.title ?\r\n        <TextareaAutosize\r\n          className=\"titleInput\"\r\n          value={state.title}\r\n          name=\"title\"\r\n          onChange={handleChange}\r\n        >\r\n          {state.title}\r\n        </TextareaAutosize> : null\r\n      }\r\n\r\n      {state.subtitle ?\r\n        <TextareaAutosize\r\n          value={state.subtitle}\r\n          name=\"subtitle\"\r\n          onChange={handleChange}\r\n        >\r\n          {state.subtitle}\r\n        </TextareaAutosize> : null\r\n      }\r\n\r\n      {state.summary ?\r\n        <TextareaAutosize\r\n          value={state.summary}\r\n          name=\"summary\"\r\n          onChange={handleChange}\r\n        >\r\n          {state.summary}\r\n        </TextareaAutosize> : null\r\n      }\r\n    </div>\r\n  )\r\n};\r\nexport default DetailedListElement;","import React, {useState} from 'react'\r\nimport TextareaAutosize from \"react-autosize-textarea\";\r\n\r\nconst BasicListElement = ({element, details, inputChange}) => {\r\n\r\n  const [state, setState] = useState({\r\n    element: element,\r\n    details: details\r\n  })\r\n\r\n  const handleChange = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"BasicListElement\">\r\n\r\n      <TextareaAutosize\r\n        value={state.element ? state.element : \"\"}\r\n        name=\"element\"\r\n        onChange={handleChange}\r\n      >\r\n      </TextareaAutosize>\r\n\r\n      <TextareaAutosize\r\n        value={state.details ? state.details : \"\"}\r\n        name=\"details\"\r\n        onChange={handleChange}\r\n      >\r\n      </TextareaAutosize>\r\n\r\n    </div>\r\n  )\r\n};\r\nexport default BasicListElement;","import React, {useEffect} from 'react'\r\nimport {detailedFields} from \"../../config/fieldTypes\";\r\nimport DefaultField from \"./DefaultField\";\r\nimport DetailedListElement from \"./DetailedListElement\";\r\nimport BasicListElement from \"./BasicListElement\";\r\nimport Sortable from \"sortablejs\";\r\n\r\nconst isDetailedField = (field) => {\r\n  return detailedFields.includes(field.toUpperCase());\r\n}\r\n\r\nconst FieldsMaker = ({fields, handleOrderChange, rightField}) => {\r\n\r\n  const rightContentRef = React.createRef();\r\n  const leftContentRef = React.createRef();\r\n\r\n  useEffect(() => {\r\n    rightField ?\r\n      new Sortable(rightContentRef.current, {\r\n        group: 'shared',\r\n        handle: '.handle',\r\n        animation: 250,\r\n        ghostClass: 'ghost',\r\n        draggable: '.draggable',\r\n        onSort: handleOrderChange\r\n      })\r\n\r\n      :\r\n\r\n      new Sortable(leftContentRef.current, {\r\n        group: 'shared',\r\n        handle: '.handle',\r\n        animation: 250,\r\n        ghostClass: 'ghost',\r\n        draggable: '.draggable',\r\n        onSort: handleOrderChange\r\n      });\r\n  })\r\n\r\n  const defaultFields = [];\r\n\r\n  for (let field in fields) {\r\n\r\n    let detailedList = null;\r\n\r\n    if (fields[field]) {\r\n      if (isDetailedField(field)) {\r\n        detailedList = fields[field].map((el, index) => {\r\n          return (\r\n            <DetailedListElement\r\n              key={index}\r\n              formatedDate={el.formatedDate}\r\n              title={el.title}\r\n              subtitle={el.subtitle}\r\n              summary={el.summary}\r\n            />\r\n          )\r\n        })\r\n      } else {\r\n        detailedList = fields[field].map((el, index) => {\r\n          return (\r\n            <BasicListElement\r\n              key={index}\r\n              element={el.element}\r\n              details={el.details}\r\n            />\r\n          )\r\n        })\r\n      }\r\n\r\n      defaultFields.push(\r\n        <DefaultField fieldType={field} key={field}>\r\n          {detailedList}\r\n        </DefaultField>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        rightField ?\r\n          <div className=\"FieldsMaker cvRightDraggable\" ref={rightContentRef}>\r\n            {defaultFields}\r\n          </div>\r\n          :\r\n          <div className=\"FieldsMaker cvLeftDraggable\" ref={leftContentRef}>\r\n            {defaultFields}\r\n          </div>\r\n      }\r\n    </>\r\n  )\r\n};\r\nexport default FieldsMaker;","import React, {useEffect} from 'react'\r\nimport ImageField from \"./fields/ImageField\";\r\nimport HeaderField from \"./fields/HeaderField\";\r\nimport PersonalInfoField from \"./fields/PersonalInfoField\";\r\nimport FieldsMaker from \"./fields/FieldsMaker\";\r\n\r\nconst BuilderBody = ({profilData, font}) => {\r\n  const personalInfo = profilData ? profilData.data.personalInfo : null;\r\n\r\n  useEffect(() => {\r\n\r\n  })\r\n\r\n  const handleOrderChange = (e) => {\r\n    console.log(\"Order Change\", e);\r\n  }\r\n\r\n  const headerInputChange = (newHeaderInput) => {\r\n    // console.log(newHeaderInput);\r\n  }\r\n\r\n  const personalInputChange = (newInfoInput) => {\r\n    console.log(newInfoInput);\r\n  }\r\n\r\n  return (\r\n    <div style={{fontFamily: font}} className=\"BuilderBody\">\r\n      <div className=\"cvBody\">\r\n\r\n        <div className=\"cvLeftContent\">\r\n          <ImageField imgSrc=\"/image.jpg\"/>\r\n\r\n          {\r\n            personalInfo ?\r\n              <PersonalInfoField\r\n                address={personalInfo.address}\r\n                birthDate={personalInfo.birthDate}\r\n                phone={personalInfo.phone}\r\n                email={personalInfo.email}\r\n                github={personalInfo.github}\r\n                linkedIn={personalInfo.linkedIn}\r\n                website={personalInfo.website}\r\n                fieldsToggle={profilData.layout.activeFields.personalFields}\r\n                personalInputChange={personalInputChange}\r\n              />\r\n              : null\r\n          }\r\n\r\n          {\r\n            profilData ?\r\n              <FieldsMaker\r\n                rightField={false}\r\n                fields={profilData.data.fields}\r\n                handleOrderChange={handleOrderChange}\r\n              />\r\n              : null\r\n          }\r\n        </div>\r\n\r\n        <div className=\"cvRightContent\">\r\n          {\r\n            personalInfo ?\r\n              <HeaderField\r\n                name={personalInfo.name}\r\n                title={personalInfo.title}\r\n                summary={personalInfo.summary}\r\n                fieldsToggle={profilData.layout.activeFields.personalFields}\r\n                headerInputChange={headerInputChange}\r\n              />\r\n              : null\r\n          }\r\n\r\n          {\r\n            profilData ?\r\n              <FieldsMaker\r\n                rightField={true}\r\n                fields={profilData.data.fields}\r\n                handleOrderChange={handleOrderChange}\r\n              />\r\n              : null\r\n          }\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\nexport default BuilderBody;","import {\r\n  GET_PROFIL,\r\n  TOGGLE_PERSONAL_FIELD,\r\n  CHANGE_FONT\r\n} from \"./actionTypes\";\r\n\r\nexport const initialState = {\r\n  profilData: null,\r\n  font: \"Roboto\"\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  console.log({\r\n    oldState: state,\r\n    type: action.type,\r\n    payload: action.payload\r\n  });\r\n\r\n  switch (action.type) {\r\n\r\n    case GET_PROFIL: {\r\n      let profilData = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        profilData\r\n      }\r\n    }\r\n\r\n    case TOGGLE_PERSONAL_FIELD: {\r\n      let fieldSwitch = action.payload;\r\n\r\n      let profilData = Object.assign({}, state.profilData);\r\n      profilData.layout.activeFields.personalFields[fieldSwitch.type].checked = fieldSwitch.checked;\r\n\r\n      return {\r\n        ...state,\r\n        profilData\r\n      }\r\n    }\r\n\r\n    case CHANGE_FONT: {\r\n      let font = action.payload;\r\n\r\n      return {\r\n        ...state,\r\n        font\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","export const GET_PROFIL = \"GET_PROFIL\";\r\nexport const TOGGLE_PERSONAL_FIELD = \"TOGGLE_PERSONAL_FIELD\";\r\nexport const CHANGE_FONT = \"CHANGE_FONT\";","import React, {createContext, useReducer, useEffect} from 'react'\r\nimport {reducer, initialState} from \"./reducers\";\r\nimport {useActions} from \"./actions\";\r\n\r\nconst StoreContext = createContext(initialState);\r\n\r\nconst StoreProvider = ({children}) => {\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const actions = useActions(state, dispatch);\r\n\r\n  useEffect(() => {\r\n\r\n  })\r\n\r\n  return (\r\n    <StoreContext.Provider value={{state, dispatch, actions}}>\r\n      {children}\r\n    </StoreContext.Provider>\r\n  )\r\n};\r\n\r\nexport {\r\n  StoreContext,\r\n  StoreProvider\r\n}","import React, {useContext, useEffect} from 'react'\r\nimport SideBar from \"../components/SideBar\";\r\nimport BuilderBody from \"../components/BuilderBody\";\r\nimport {StoreContext} from \"../context/StoreContext\";\r\n\r\nconst CvBuilder = () => {\r\n\r\n  const {actions, state} = useContext(StoreContext);\r\n\r\n  useEffect(() => {\r\n    actions.getProfilData();\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"CvBuilder\">\r\n      <SideBar\r\n        profilData={state.profilData}\r\n        togglePersonalField={(type, checked) => actions.togglePersonalField({type, checked})}\r\n        changeFont={(font) => actions.changeFont(font)}\r\n      />\r\n\r\n      <BuilderBody profilData={state.profilData} font={state.font}/>\r\n    </div>\r\n  )\r\n};\r\nexport default CvBuilder;","import React from 'react'\r\nimport './styles/index.scss'\r\nimport CvBuilder from \"./containers/CvBuilder\";\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <CvBuilder/>\r\n    </div>\r\n  )\r\n};\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {StoreProvider} from \"./context/StoreContext\";\n\nReactDOM.render(\n  <StoreProvider>\n    <App/>\n  </StoreProvider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from 'axios'\r\n\r\nimport {\r\n  GET_PROFIL,\r\n  TOGGLE_PERSONAL_FIELD,\r\n  CHANGE_FONT\r\n} from \"./actionTypes\";\r\n\r\nexport const useActions = (state, dispatch) => {\r\n\r\n  const getProfilData = () => {\r\n    const url = \"./profil.json\";\r\n    axios.get(url).then(resp => {\r\n      dispatch({type: GET_PROFIL, payload: resp.data})\r\n    });\r\n  }\r\n\r\n  const togglePersonalField = (fieldSwitch) => {\r\n    dispatch({type: TOGGLE_PERSONAL_FIELD, payload: fieldSwitch})\r\n  }\r\n\r\n  const changeFont = (font) => {\r\n    dispatch({type: CHANGE_FONT, payload: font})\r\n  }\r\n\r\n  return {\r\n    getProfilData,\r\n    togglePersonalField,\r\n    changeFont\r\n  }\r\n}"],"sourceRoot":""}